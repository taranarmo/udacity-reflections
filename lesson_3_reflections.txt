Q:When would you want to use a remote repository rather than keeping all your work local?
When you want to share your work, get access to other person to work on your project or work on other machine. Also it is a nice way not to keep all eggs in one basket.

Q:Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
And again, manual pushing lets you to control your project and how it looks. Also you may have very poor internet connection, so you pushes may be slow.

Q:Describe the differences between forks, clones, and branches. When would you use one instead of another?
Forking is a creating copy of some repo to your account on GitHub (or somewhere else) to be able to modify it, cloning is a creating copy of that on your machine and it could be done without GitHub account, branch is a copy of a repo on the same machine where it is. If you want to participate on someone work publicly and do not affraid of GitHub you should fork it. Else you may want to clone it. And if you have a desire to make big changes in your project or prototype something without breaking working version, you should clone.

Q:What is the benefit of having a copy of the last known state of the remote stored locally?
It is convinient to have remote state locally, as it helps you to track possible conflicts via saying that you repo is ahead of remote r vice versa, also in case of blackout or other situations without internet access.

Q:How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
Well, it could be done simply sending new versions of files to collaborators. As soon as only one person work on project at the time, there can not be any conflicts. But if someone else wiil make some changes and it is quite big, it is painful to handle merging by hand. Also there are other version control systems.

Q:When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
You may want to make a branch when you want to make changes you don't want to show to others yet or make something breaking normal work of your project for some time. Though if you work on master branch, it is much easier to keep the code updated.

